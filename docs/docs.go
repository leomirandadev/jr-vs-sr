// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/capsulas": {
            "post": {
                "description": "Create Capsula",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "capsulas"
                ],
                "parameters": [
                    {
                        "description": "create new capsula",
                        "name": "capsula",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_internal_models.CreateCapsulaReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_internal_models.Capsula"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_pkg_customerr.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_pkg_customerr.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_pkg_customerr.Error"
                        }
                    }
                }
            }
        },
        "/v1/capsulas/photo/upload": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Capsula upload image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "capsulas"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_pkg_customerr.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_pkg_customerr.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_pkg_customerr.Error"
                        }
                    }
                }
            }
        },
        "/v1/capsulas/{id}": {
            "get": {
                "description": "Get one capsula",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "capsulas"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "CapsulaID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_internal_models.Capsula"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_pkg_customerr.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_pkg_customerr.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_pkg_customerr.Error"
                        }
                    }
                }
            }
        },
        "/v1/capsulas/{id}/message": {
            "post": {
                "description": "Create Capsula message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "capsulas"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "CapsulaID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "create new capsula",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_internal_models.CreateMessageReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_internal_models.Capsula"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_pkg_customerr.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_pkg_customerr.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_leomirandadev_capsulas_pkg_customerr.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_leomirandadev_capsulas_internal_models.Capsula": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_date": {
                    "type": "string"
                },
                "sent": {
                    "type": "boolean"
                }
            }
        },
        "github_com_leomirandadev_capsulas_internal_models.CreateCapsulaReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "open_date": {
                    "type": "string",
                    "example": "2025-12-10"
                }
            }
        },
        "github_com_leomirandadev_capsulas_internal_models.CreateMessageReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                }
            }
        },
        "github_com_leomirandadev_capsulas_pkg_customerr.Error": {
            "type": "object",
            "properties": {
                "details": {},
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" before paste the token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
